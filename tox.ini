[tox]
envlist = py310, lint, example-00-hello-agent
isolated_build = True
skipsdist = False

[testenv]
description = Run the core framework tests
deps =
    -e .[dev]
allowlist_externals =
    pytest
commands =
    pytest {toxinidir}/tests/

[testenv:lint]
description = Run linting checks
deps =
    -e .[dev]
allowlist_externals =
    black
    isort
    flake8
    mypy
commands =
    black --check {toxinidir}/src {toxinidir}/tests
    isort --check {toxinidir}/src {toxinidir}/tests
    flake8 {toxinidir}/src {toxinidir}/tests
    mypy --config-file=mypy.ini {toxinidir}/src {toxinidir}/tests

[testenv:example-00-hello-agent]
description = Test the 00_hello_agent/hello_agent_example
deps =
    # For framework testing, we directly use the development version of simple-mas
    -e .
    # Pull in the example's dependencies
    -r {toxinidir}/examples/00_hello_agent/hello_agent_example/requirements.txt
allowlist_externals =
    pytest
commands =
    pytest {toxinidir}/examples/00_hello_agent/hello_agent_example/

[testenv:mqtt]
description = Run tests for MQTT communicator with MQTT dependencies installed
deps =
    -e .[dev,mqtt]
allowlist_externals =
    pytest
commands =
    pytest {toxinidir}/tests/unit/communication/test_mqtt_communicator.py -v

[testenv:mcp]
description = Run tests for MCP communicators with MCP dependencies installed
deps =
    -e .[dev,mcp]
allowlist_externals =
    pytest
commands =
    pytest {toxinidir}/tests/unit/communication/mcp/ -v

[testenv:all-extras]
description = Run all tests with all optional dependencies installed
deps =
    -e .[dev,all]
allowlist_externals =
    pytest
commands =
    pytest {toxinidir}/tests/
