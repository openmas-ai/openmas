version: "1.0"

component:
  name: "chess-player"
  type: "agent"
  description: "An agent that can play chess using MCP protocol"

docker:
  build:
    context: "."
    dockerfile: "Dockerfile"
    # Uncomment to use build args if needed
    # args:
    #   - name: "PYTHON_VERSION"
    #     value: "3.10"

environment:
  - name: "AGENT_NAME"
    value: "${component.name}"
  - name: "LOG_LEVEL"
    value: "INFO"
  - name: "COMMUNICATOR_TYPE"
    value: "mcp_stdio"
  - name: "COMMUNICATOR_OPTIONS"
    value: '{"model": "claude-3-opus-20240229"}'
  - name: "MCP_API_KEY"
    secret: true
    description: "API key for MCP service"
  - name: "SERVICE_URL_MCP_SERVER"
    value: "http://mcp-server:8000"
    description: "URL for the MCP server"
  - name: "SERVICE_URL_GAME_COORDINATOR"
    value: "http://game-coordinator:8002"
    description: "URL for the game coordinator"

ports:
  - port: 8000
    protocol: "http"
    description: "HTTP API for agent interaction"
  - port: 8001
    protocol: "websocket"
    description: "WebSocket for real-time events"

volumes:
  - name: "chess-memory"
    path: "/app/data/memory"
    description: "Persistent memory for chess games"
  - name: "logs"
    path: "/app/logs"
    description: "Log storage"

dependencies:
  - name: "mcp-server"
    required: true
    description: "MCP server for model access"
  - name: "game-coordinator"
    required: true
    description: "Service that coordinates chess games"

# Additional deployment configuration
resources:
  cpu: "0.5"
  memory: "512Mi"
  gpu: false

health_check:
  path: "/health"
  port: 8000
  initial_delay_seconds: 10
  period_seconds: 30
